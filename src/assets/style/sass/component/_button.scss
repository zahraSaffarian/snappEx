@mixin btnStyle($bg, $line: line) {
  font-size: $btn-font-size;
  border: 1px solid $bg;
  height: $btn-height;
  direction: rtl;
  border-radius: $border-radius-base;
  padding: 0 $padding-default;
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  cursor: pointer;
  transition: background-color 0.5s ease;
  min-width: 104px;
  &:focus {
    box-shadow: 0 0 0 0.2rem rgba($bg, 0.5);
    border-color: $bg;
    color: $light-base;
    outline: 0;
  }

  &:hover,
  &:active {
    color: $light-base;
  }

  @if $line == "line" {
    background-color: transparent;
    color: $bg;

    &:hover,
    &:active,
    &:focus {
      background: $bg !important;
      border: 1px solid $bg !important;
    }

    &:disabled,
    &:disabled:hover,
    &:disabled:focus,
    &[disabled],
    &[disabled]:hover,
    &[disabled]:focus {
      background: #f0f0f0 !important;
      color: darken($bg, 15%) !important;
      border: 1px solid darken($bg, 15%) !important;
      cursor: no-drop;
    }
  } @else {
    background: $bg;
    color: $light-base;

    &:hover,
    &:active,
    &:focus {
      background: darken($bg, 5%) !important;
      border: 1px solid $bg !important;
    }

    &:disabled,
    &:disabled:hover,
    &:disabled:focus,
    &[disabled],
    &[disabled]:hover,
    &[disabled]:focus {
      color: $gray-lighten !important;
      background: lighten($bg, 30%) !important;
      boarder-color: lighten($bg, 30%) !important;
      cursor: no-drop;
    }
  }
}

$btn-color: (
  "default": $attention,
);
@each $btn, $color in $btn-color {
  .btn-#{$btn} {
    @include btnStyle($color, outline);
  }
  .btn-outline-#{$btn} {
    @include btnStyle($color, line);
  }
}
